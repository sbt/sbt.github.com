"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[21],{4416:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var t=s(4848),l=s(8453);const i={slug:"/sbt-by-example",title:"sbt by example"},o=void 0,r={id:"getting-started/sbt-by-example",title:"sbt by example",description:"[Basic-Def]: Basic-Def.html",source:"@site/docs/getting-started/02-sbt-by-example.md",sourceDirName:"getting-started",slug:"/sbt-by-example",permalink:"/docs/sbt-by-example",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{slug:"/sbt-by-example",title:"sbt by example"},sidebar:"defaultSidebar",previous:{title:"Getting Started with sbt",permalink:"/docs/category/getting-started-with-sbt"}},a={},c=[{value:"Create a minimum sbt build",id:"create-a-minimum-sbt-build",level:3},{value:"Start sbt shell",id:"start-sbt-shell",level:3},{value:"Exit sbt shell",id:"exit-sbt-shell",level:3},{value:"Compile a project",id:"compile-a-project",level:3},{value:"Recompile on code change",id:"recompile-on-code-change",level:3},{value:"Create a source file",id:"create-a-source-file",level:3},{value:"Run a previous command",id:"run-a-previous-command",level:3},{value:"Getting help",id:"getting-help",level:3},{value:"Run your app",id:"run-your-app",level:3},{value:"Set ThisBuild / scalaVersion from sbt shell",id:"set-thisbuild--scalaversion-from-sbt-shell",level:3},{value:"Save the session to build.sbt",id:"save-the-session-to-buildsbt",level:3},{value:"Name your project",id:"name-your-project",level:3},{value:"Reload the build",id:"reload-the-build",level:3},{value:"Add toolkit-test to libraryDependencies",id:"add-toolkit-test-to-librarydependencies",level:3},{value:"Run tests",id:"run-tests",level:3},{value:"Run incremental tests continuously",id:"run-incremental-tests-continuously",level:3},{value:"Write a test",id:"write-a-test",level:3},{value:"Make the test pass",id:"make-the-test-pass",level:3},{value:"Add a library dependency",id:"add-a-library-dependency",level:3},{value:"Use Scala REPL",id:"use-scala-repl",level:3},{value:"Make a subproject",id:"make-a-subproject",level:3},{value:"List all subprojects",id:"list-all-subprojects",level:3},{value:"Compile the subproject",id:"compile-the-subproject",level:3},{value:"Add toolkit-test to the subproject",id:"add-toolkit-test-to-the-subproject",level:3},{value:"Broadcast commands",id:"broadcast-commands",level:3},{value:"Make hello depend on helloCore",id:"make-hello-depend-on-hellocore",level:3},{value:"Parse JSON using uJson",id:"parse-json-using-ujson",level:3},{value:"Add sbt-native-packager plugin",id:"add-sbt-native-packager-plugin",level:3},{value:"Reload and create a .zip distribution",id:"reload-and-create-a-zip-distribution",level:3},{value:"Dockerize your app",id:"dockerize-your-app",level:3},{value:"Set the version",id:"set-the-version",level:3},{value:"Switch scalaVersion temporarily",id:"switch-scalaversion-temporarily",level:3},{value:"Inspect the dist task",id:"inspect-the-dist-task",level:3},{value:"Batch mode",id:"batch-mode",level:3},{value:"sbt new command",id:"sbt-new-command",level:3},{value:"Credits",id:"credits",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["This page assumes you've ",(0,t.jsx)(n.a,{href:"setup",children:"installed sbt 1"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Let's start with examples rather than explaining how sbt works or why."}),"\n",(0,t.jsx)(n.h3,{id:"create-a-minimum-sbt-build",children:"Create a minimum sbt build"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"$ mkdir foo-build\n$ cd foo-build\n$ touch build.sbt\n"})}),"\n",(0,t.jsx)(n.h3,{id:"start-sbt-shell",children:"Start sbt shell"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"$ sbt\n[info] Updated file /tmp/foo-build/project/build.properties: set sbt.version to 1.10.1\n[info] welcome to sbt 1.10.1 (Eclipse Adoptium Java 17.0.8)\n[info] Loading project definition from /tmp/foo-build/project\n[info] loading settings for project foo-build from build.sbt ...\n[info] Set current project to foo-build (in build file:/tmp/foo-build/)\n[info] sbt server started at local:///Users/eed3si9n/.sbt/1.0/server/abc4fb6c89985a00fd95/sock\n[info] started sbt server\nsbt:foo-build>\n"})}),"\n",(0,t.jsx)(n.h3,{id:"exit-sbt-shell",children:"Exit sbt shell"}),"\n",(0,t.jsxs)(n.p,{children:["To leave sbt shell, type ",(0,t.jsx)(n.code,{children:"exit"})," or use Ctrl+D (Unix) or Ctrl+Z (Windows)."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sbt:foo-build> exit\n"})}),"\n",(0,t.jsx)(n.h3,{id:"compile-a-project",children:"Compile a project"}),"\n",(0,t.jsxs)(n.p,{children:["As a convention, we will use the ",(0,t.jsx)(n.code,{children:"sbt:...>"})," or ",(0,t.jsx)(n.code,{children:">"})," prompt to mean that we're in the sbt interactive shell."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ sbt\nsbt:foo-build> compile\n"})}),"\n",(0,t.jsx)(n.h3,{id:"recompile-on-code-change",children:"Recompile on code change"}),"\n",(0,t.jsxs)(n.p,{children:["Prefixing the ",(0,t.jsx)(n.code,{children:"compile"})," command (or any other command) with ",(0,t.jsx)(n.code,{children:"~"})," causes the command to be automatically\nre-executed whenever one of the source files within the project is modified. For example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sbt:foo-build> ~compile\n[success] Total time: 0 s, completed 28 Jul 2023, 13:32:35\n[info] 1. Monitoring source files for foo-build/compile...\n[info]    Press <enter> to interrupt or '?' for more options.\n"})}),"\n",(0,t.jsx)(n.h3,{id:"create-a-source-file",children:"Create a source file"}),"\n",(0,t.jsxs)(n.p,{children:["Leave the previous command running. From a different shell or in your file manager create in the foo-build\ndirectory the following nested directories: ",(0,t.jsx)(n.code,{children:"src/main/scala/example"}),". Then, create ",(0,t.jsx)(n.code,{children:"Hello.scala"}),"\nin the ",(0,t.jsx)(n.code,{children:"example"})," directory using your favorite editor as follows:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'package example\n\nobject Hello {\n  def main(args: Array[String]): Unit = {\n    println("Hello")\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"This new file should be picked up by the running command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"[info] Build triggered by /tmp/foo-build/src/main/scala/example/Hello.scala. Running 'compile'.\n[info] compiling 1 Scala source to /tmp/foo-build/target/scala-2.12/classes ...\n[success] Total time: 0 s, completed 28 Jul 2023, 13:38:55\n[info] 2. Monitoring source files for foo-build/compile...\n[info]    Press <enter> to interrupt or '?' for more options.\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Press ",(0,t.jsx)(n.code,{children:"Enter"})," to exit ",(0,t.jsx)(n.code,{children:"~compile"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"run-a-previous-command",children:"Run a previous command"}),"\n",(0,t.jsxs)(n.p,{children:["From sbt shell, press up-arrow twice to find the ",(0,t.jsx)(n.code,{children:"compile"})," command that you\nexecuted at the beginning."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sbt:foo-build> compile\n"})}),"\n",(0,t.jsx)(n.h3,{id:"getting-help",children:"Getting help"}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"help"})," command to get basic help about the available commands."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sbt:foo-build> help\n\n  <command> (; <command>)*                       Runs the provided semicolon-separated commands.\n  about                                          Displays basic information about sbt and the build.\n  tasks                                          Lists the tasks defined for the current project.\n  settings                                       Lists the settings defined for the current project.\n  reload                                         (Re)loads the current project or changes to plugins project or returns from it.\n  new                                            Creates a new sbt build.\n  new                                            Creates a new sbt build.\n  projects                                       Lists the names of available projects or temporarily adds/removes extra builds to the session.\n\n....\n"})}),"\n",(0,t.jsx)(n.p,{children:"Display the description of a specific task:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sbt:foo-build> help run\nRuns a main class, passing along arguments provided on the command line.\n"})}),"\n",(0,t.jsx)(n.h3,{id:"run-your-app",children:"Run your app"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sbt:foo-build> run\n[info] running example.Hello\nHello\n[success] Total time: 0 s, completed 28 Jul 2023, 13:40:31\n"})}),"\n",(0,t.jsx)(n.h3,{id:"set-thisbuild--scalaversion-from-sbt-shell",children:"Set ThisBuild / scalaVersion from sbt shell"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'sbt:foo-build> set ThisBuild / scalaVersion := "$example_scala213$"\n[info] Defining ThisBuild / scalaVersion\n[info] The new value will be used by Compile / bspBuildTarget, Compile / dependencyTreeCrossProjectId and 50 others.\n[info]  Run `last` for details.\n[info] Reapplying settings...\n[info] set current project to foo-build (in build file:/tmp/foo-build/)\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Check the ",(0,t.jsx)(n.code,{children:"scalaVersion"})," setting:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sbt:foo-build> scalaVersion\n[info] $example_scala213$\n"})}),"\n",(0,t.jsx)(n.h3,{id:"save-the-session-to-buildsbt",children:"Save the session to build.sbt"}),"\n",(0,t.jsxs)(n.p,{children:["We can save the ad-hoc settings using ",(0,t.jsx)(n.code,{children:"session save"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sbt:foo-build> session save\n[info] Reapplying settings...\n[info] set current project to foo-build (in build file:/tmp/foo-build/)\n[warn] build source files have changed\n[warn] modified files:\n[warn]   /tmp/foo-build/build.sbt\n[warn] Apply these changes by running `reload`.\n[warn] Automatically reload the build when source changes are detected by setting `Global / onChangedBuildSource := ReloadOnSourceChanges`.\n[warn] Disable this warning by setting `Global / onChangedBuildSource := IgnoreSourceChanges`.\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"build.sbt"})," file should now contain:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'ThisBuild / scalaVersion := "$example_scala213$"\n\n'})}),"\n",(0,t.jsx)(n.h3,{id:"name-your-project",children:"Name your project"}),"\n",(0,t.jsxs)(n.p,{children:["Using an editor, change ",(0,t.jsx)(n.code,{children:"build.sbt"})," as follows:"]}),"\n",(0,t.jsxs)(n.p,{children:["@@snip ",(0,t.jsx)(n.a,{href:"$root$/src/sbt-test/ref/example-name/build.sbt",children:"name"})," "]}),"\n",(0,t.jsx)(n.h3,{id:"reload-the-build",children:"Reload the build"}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"reload"})," command to reload the build. The command causes the\n",(0,t.jsx)(n.code,{children:"build.sbt"})," file to be re-read, and its settings applied."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sbt:foo-build> reload\n[info] welcome to sbt 1.10.1 (Eclipse Adoptium Java 17.0.8)\n[info] loading project definition from /tmp/foo-build/project\n[info] loading settings for project hello from build.sbt ...\n[info] set current project to Hello (in build file:/tmp/foo-build/)\nsbt:Hello>\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Note that the prompt has now changed to ",(0,t.jsx)(n.code,{children:"sbt:Hello>"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"add-toolkit-test-to-librarydependencies",children:"Add toolkit-test to libraryDependencies"}),"\n",(0,t.jsxs)(n.p,{children:["Using an editor, change ",(0,t.jsx)(n.code,{children:"build.sbt"})," as follows:"]}),"\n",(0,t.jsxs)(n.p,{children:["@@snip ",(0,t.jsx)(n.a,{href:"$root$/src/sbt-test/ref/example-test/build.sbt",children:"example-test"})," "]}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"reload"})," command to reflect the change in ",(0,t.jsx)(n.code,{children:"build.sbt"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sbt:Hello> reload\n"})}),"\n",(0,t.jsx)(n.h3,{id:"run-tests",children:"Run tests"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sbt:Hello> test\n"})}),"\n",(0,t.jsx)(n.h3,{id:"run-incremental-tests-continuously",children:"Run incremental tests continuously"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sbt:Hello> ~testQuick\n"})}),"\n",(0,t.jsx)(n.h3,{id:"write-a-test",children:"Write a test"}),"\n",(0,t.jsxs)(n.p,{children:["Leaving the previous command running, create a file named ",(0,t.jsx)(n.code,{children:"src/test/scala/example/HelloSuite.scala"}),"\nusing an editor:"]}),"\n",(0,t.jsxs)(n.p,{children:["@@snip ",(0,t.jsx)(n.a,{href:"$root$/src/sbt-test/ref/example-test/src/test/scala/example/HelloSuite.scala",children:"example-test"})," "]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"~testQuick"})," should pick up the change:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'[info] 2. Monitoring source files for hello/testQuick...\n[info]    Press <enter> to interrupt or \'?\' for more options.\n[info] Build triggered by /tmp/foo-build/src/test/scala/example/HelloSuite.scala. Running \'testQuick\'.\n[info] compiling 1 Scala source to /tmp/foo-build/target/scala-2.13/test-classes ...\nHelloSuite:\n==> X HelloSuite.Hello should start with H  0.004s munit.FailException: /tmp/foo-build/src/test/scala/example/HelloSuite.scala:4 assertion failed\n3:  test("Hello should start with H") {\n4:    assert("hello".startsWith("H"))\n5:  }\n    at munit.FunSuite.assert(FunSuite.scala:11)\n    at HelloSuite.\\$anonfun\\$new\\$1(HelloSuite.scala:4)\n[error] Failed: Total 1, Failed 1, Errors 0, Passed 0\n[error] Failed tests:\n[error]         HelloSuite\n[error] (Test / testQuick) sbt.TestsFailedException: Tests unsuccessful\n'})}),"\n",(0,t.jsx)(n.h3,{id:"make-the-test-pass",children:"Make the test pass"}),"\n",(0,t.jsxs)(n.p,{children:["Using an editor, change ",(0,t.jsx)(n.code,{children:"src/test/scala/example/HelloSuite.scala"})," to:"]}),"\n",(0,t.jsxs)(n.p,{children:["@@snip ",(0,t.jsx)(n.a,{href:"$root$/src/sbt-test/ref/example-test/changes/HelloSuite.scala",children:"example-test"})," "]}),"\n",(0,t.jsxs)(n.p,{children:["Confirm that the test passes, then press ",(0,t.jsx)(n.code,{children:"Enter"})," to exit the continuous test."]}),"\n",(0,t.jsx)(n.h3,{id:"add-a-library-dependency",children:"Add a library dependency"}),"\n",(0,t.jsxs)(n.p,{children:["Using an editor, change ",(0,t.jsx)(n.code,{children:"build.sbt"})," as follows:"]}),"\n",(0,t.jsxs)(n.p,{children:["@@snip ",(0,t.jsx)(n.a,{href:"$root$/src/sbt-test/ref/example-library/build.sbt",children:"example-library"})," "]}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"reload"})," command to reflect the change in ",(0,t.jsx)(n.code,{children:"build.sbt"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"use-scala-repl",children:"Use Scala REPL"}),"\n",(0,t.jsx)(n.p,{children:"We can find out the current weather in New York."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'sbt:Hello> console\n[info] Starting scala interpreter...\nWelcome to Scala 2.13.12 (OpenJDK 64-Bit Server VM, Java 17).\nType in expressions for evaluation. Or try :help.\n\nscala> :paste\n// Entering paste mode (ctrl-D to finish)\n\nimport sttp.client4.quick._\nimport sttp.client4.Response\n\nval newYorkLatitude: Double = 40.7143\nval newYorkLongitude: Double = -74.006\nval response: Response[String] = quickRequest\n  .get(\n    uri"https://api.open-meteo.com/v1/forecast?latitude=\\$newYorkLatitude&longitude=\\$newYorkLongitude&current_weather=true"\n  )\n  .send()\n\nprintln(ujson.read(response.body).render(indent = 2))\n\n// press Ctrl+D\n\n// Exiting paste mode, now interpreting.\n\n{\n  "latitude": 40.710335,\n  "longitude": -73.99307,\n  "generationtime_ms": 0.36704540252685547,\n  "utc_offset_seconds": 0,\n  "timezone": "GMT",\n  "timezone_abbreviation": "GMT",\n  "elevation": 51,\n  "current_weather": {\n    "temperature": 21.3,\n    "windspeed": 16.7,\n    "winddirection": 205,\n    "weathercode": 3,\n    "is_day": 1,\n    "time": "2023-08-04T10:00"\n  }\n}\nimport sttp.client4.quick._\nimport sttp.client4.Response\nval newYorkLatitude: Double = 40.7143\nval newYorkLongitude: Double = -74.006\nval response: sttp.client4.Response[String] = Response({"latitude":40.710335,"longitude":-73.99307,"generationtime_ms":0.36704540252685547,"utc_offset_seconds":0,"timezone":"GMT","timezone_abbreviation":"GMT","elevation":51.0,"current_weather":{"temperature":21.3,"windspeed":16.7,"winddirection":205.0,"weathercode":3,"is_day":1,"time":"2023-08-04T10:00"}},200,,List(:status: 200, content-encoding: deflate, content-type: application/json; charset=utf-8, date: Fri, 04 Aug 2023 10:09:11 GMT),List(),RequestMetadata(GET,https://api.open-meteo.com/v1/forecast?latitude=40.7143&longitude...\n\nscala> :q // to quit\n'})}),"\n",(0,t.jsx)(n.h3,{id:"make-a-subproject",children:"Make a subproject"}),"\n",(0,t.jsxs)(n.p,{children:["Change ",(0,t.jsx)(n.code,{children:"build.sbt"})," as follows:"]}),"\n",(0,t.jsxs)(n.p,{children:["@@snip ",(0,t.jsx)(n.a,{href:"$root$/src/sbt-test/ref/example-sub1/build.sbt",children:"example-sub1"})," "]}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"reload"})," command to reflect the change in ",(0,t.jsx)(n.code,{children:"build.sbt"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"list-all-subprojects",children:"List all subprojects"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sbt:Hello> projects\n[info] In file:/tmp/foo-build/\n[info]   * hello\n[info]     helloCore\n"})}),"\n",(0,t.jsx)(n.h3,{id:"compile-the-subproject",children:"Compile the subproject"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sbt:Hello> helloCore/compile\n"})}),"\n",(0,t.jsx)(n.h3,{id:"add-toolkit-test-to-the-subproject",children:"Add toolkit-test to the subproject"}),"\n",(0,t.jsxs)(n.p,{children:["Change ",(0,t.jsx)(n.code,{children:"build.sbt"})," as follows:"]}),"\n",(0,t.jsxs)(n.p,{children:["@@snip ",(0,t.jsx)(n.a,{href:"$root$/src/sbt-test/ref/example-sub2/build.sbt",children:"example-sub2"})," "]}),"\n",(0,t.jsx)(n.h3,{id:"broadcast-commands",children:"Broadcast commands"}),"\n",(0,t.jsxs)(n.p,{children:["Set aggregate so that the command sent to ",(0,t.jsx)(n.code,{children:"hello"})," is broadcast to ",(0,t.jsx)(n.code,{children:"helloCore"})," too:"]}),"\n",(0,t.jsxs)(n.p,{children:["@@snip ",(0,t.jsx)(n.a,{href:"$root$/src/sbt-test/ref/example-sub3/build.sbt",children:"example-sub3"})," "]}),"\n",(0,t.jsxs)(n.p,{children:["After ",(0,t.jsx)(n.code,{children:"reload"}),", ",(0,t.jsx)(n.code,{children:"~testQuick"})," now runs on both subprojects:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:"sbt:Hello> ~testQuick\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Press ",(0,t.jsx)(n.code,{children:"Enter"})," to exit the continuous test."]}),"\n",(0,t.jsx)(n.h3,{id:"make-hello-depend-on-hellocore",children:"Make hello depend on helloCore"}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:".dependsOn(...)"})," to add a dependency on other subprojects. Also let's move the Gigahorse dependency to ",(0,t.jsx)(n.code,{children:"helloCore"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["@@snip ",(0,t.jsx)(n.a,{href:"$root$/src/sbt-test/ref/example-sub4/build.sbt",children:"example-sub4"})," "]}),"\n",(0,t.jsx)(n.h3,{id:"parse-json-using-ujson",children:"Parse JSON using uJson"}),"\n",(0,t.jsxs)(n.p,{children:["Let's use uJson from the toolkit in ",(0,t.jsx)(n.code,{children:"helloCore"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["@@snip ",(0,t.jsx)(n.a,{href:"$root$/src/sbt-test/ref/example-weather/build.sbt",children:"example-weather-build"})," "]}),"\n",(0,t.jsxs)(n.p,{children:["After ",(0,t.jsx)(n.code,{children:"reload"}),", add ",(0,t.jsx)(n.code,{children:"core/src/main/scala/example/core/Weather.scala"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'package example.core\n\nimport sttp.client4.quick._\nimport sttp.client4.Response\n\nobject Weather {\n  def temp() = {\n    val response: Response[String] = quickRequest\n      .get(\n        uri"https://api.open-meteo.com/v1/forecast?latitude=40.7143&longitude=-74.006&current_weather=true"\n      )\n      .send()\n    val json = ujson.read(response.body)\n    json.obj("current_weather")("temperature").num\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Next, change ",(0,t.jsx)(n.code,{children:"src/main/scala/example/Hello.scala"})," as follows:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'package example\n\nimport example.core.Weather\n\nobject Hello {\n  def main(args: Array[String]): Unit = {\n    val temp = Weather.temp()\n    println(s"Hello! The current temperature in New York is \\$temp C.")\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Let's run the app to see if it worked:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sbt:Hello> run\n[info] compiling 1 Scala source to /tmp/foo-build/core/target/scala-2.13/classes ...\n[info] compiling 1 Scala source to /tmp/foo-build/target/scala-2.13/classes ...\n[info] running example.Hello\nHello! The current temperature in New York is 22.7 C.\n"})}),"\n",(0,t.jsx)(n.h3,{id:"add-sbt-native-packager-plugin",children:"Add sbt-native-packager plugin"}),"\n",(0,t.jsxs)(n.p,{children:["Using an editor, create ",(0,t.jsx)(n.code,{children:"project/plugins.sbt"}),":"]}),"\n",(0,t.jsxs)(n.p,{children:["@@snip ",(0,t.jsx)(n.a,{href:"$root$/src/sbt-test/ref/example-weather/changes/plugins.sbt",children:"example-weather-plugins"})," "]}),"\n",(0,t.jsxs)(n.p,{children:["Next change ",(0,t.jsx)(n.code,{children:"build.sbt"})," as follows to add ",(0,t.jsx)(n.code,{children:"JavaAppPackaging"}),":"]}),"\n",(0,t.jsxs)(n.p,{children:["@@snip ",(0,t.jsx)(n.a,{href:"$root$/src/sbt-test/ref/example-weather/changes/build.sbt",children:"example-weather-build2"})," "]}),"\n",(0,t.jsx)(n.h3,{id:"reload-and-create-a-zip-distribution",children:"Reload and create a .zip distribution"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sbt:Hello> reload\n...\nsbt:Hello> dist\n[info] Wrote /private/tmp/foo-build/target/scala-2.13/hello_2.13-0.1.0-SNAPSHOT.pom\n[info] Main Scala API documentation to /tmp/foo-build/target/scala-2.13/api...\n[info] Main Scala API documentation successful.\n[info] Main Scala API documentation to /tmp/foo-build/core/target/scala-2.13/api...\n[info] Wrote /tmp/foo-build/core/target/scala-2.13/hello-core_2.13-0.1.0-SNAPSHOT.pom\n[info] Main Scala API documentation successful.\n[success] All package validations passed\n[info] Your package is ready in /tmp/foo-build/target/universal/hello-0.1.0-SNAPSHOT.zip\n"})}),"\n",(0,t.jsx)(n.p,{children:"Here's how you can run the packaged app:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"$ /tmp/someother\n$ cd /tmp/someother\n$ unzip -o -d /tmp/someother /tmp/foo-build/target/universal/hello-0.1.0-SNAPSHOT.zip\n$ ./hello-0.1.0-SNAPSHOT/bin/hello\nHello! The current temperature in New York is 22.7 C.\n"})}),"\n",(0,t.jsx)(n.h3,{id:"dockerize-your-app",children:"Dockerize your app"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Note that a Docker daemon will need to be running in order for this to work."})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sbt:Hello> Docker/publishLocal\n....\n[info] Built image hello with tags [0.1.0-SNAPSHOT]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Here's how to run the Dockerized app:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\\$ docker run hello:0.1.0-SNAPSHOT\nHello! The current temperature in New York is 22.7 C.\n"})}),"\n",(0,t.jsx)(n.h3,{id:"set-the-version",children:"Set the version"}),"\n",(0,t.jsxs)(n.p,{children:["Change ",(0,t.jsx)(n.code,{children:"build.sbt"})," as follows:"]}),"\n",(0,t.jsxs)(n.p,{children:["@@snip ",(0,t.jsx)(n.a,{href:"$root$/src/sbt-test/ref/example-weather/changes/build3.sbt",children:"example-weather-build3"})," "]}),"\n",(0,t.jsx)(n.h3,{id:"switch-scalaversion-temporarily",children:"Switch scalaVersion temporarily"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sbt:Hello> ++3.3.1!\n[info] Forcing Scala version to 3.3.1 on all projects.\n[info] Reapplying settings...\n[info] Set current project to Hello (in build file:/tmp/foo-build/)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Check the ",(0,t.jsx)(n.code,{children:"scalaVersion"})," setting:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sbt:Hello> scalaVersion\n[info] helloCore / scalaVersion\n[info]  3.3.1\n[info] scalaVersion\n[info]  3.3.1\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This setting will go away after ",(0,t.jsx)(n.code,{children:"reload"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"inspect-the-dist-task",children:"Inspect the dist task"}),"\n",(0,t.jsxs)(n.p,{children:["To find out more about ",(0,t.jsx)(n.code,{children:"dist"}),", try ",(0,t.jsx)(n.code,{children:"help"})," and ",(0,t.jsx)(n.code,{children:"inspect"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:"sbt:Hello> help dist\nCreates the distribution packages.\nsbt:Hello> inspect dist\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To call inspect recursively on the dependency tasks use ",(0,t.jsx)(n.code,{children:"inspect tree"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:"sbt:Hello> inspect tree dist\n[info] dist = Task[java.io.File]\n[info]   +-Universal / dist = Task[java.io.File]\n....\n"})}),"\n",(0,t.jsx)(n.h3,{id:"batch-mode",children:"Batch mode"}),"\n",(0,t.jsx)(n.p,{children:"You can also run sbt in batch mode, passing sbt commands directly from the terminal."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'\\$ sbt clean "testOnly HelloSuite"\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note"}),": Running in batch mode requires JVM spinup and JIT each time,\nso ",(0,t.jsx)(n.strong,{children:"your build will run much slower"}),".\nFor day-to-day coding, we recommend using the sbt shell\nor a continuous test like ",(0,t.jsx)(n.code,{children:"~testQuick"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"sbt-new-command",children:"sbt new command"}),"\n",(0,t.jsxs)(n.p,{children:["You can use the sbt ",(0,t.jsx)(n.code,{children:"new"}),' command to quickly setup a simple "Hello world" build.\nVarious templates are available, including these two:']}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\\$ sbt new scala/toolkit.local\n\\$ sbt new scala/scala3.g8\n"})}),"\n",(0,t.jsx)(n.p,{children:"These will create a Scala 3 project. If you want to use Scala 2,\nuse this command instead:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\\$ sbt new scala/scala-seed.g8\n"})}),"\n",(0,t.jsxs)(n.p,{children:["When prompted for the project name, type ",(0,t.jsx)(n.code,{children:"hello"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["This will create a new project under a directory named ",(0,t.jsx)(n.code,{children:"hello"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"credits",children:"Credits"}),"\n",(0,t.jsxs)(n.p,{children:["This page is based on the ",(0,t.jsx)(n.a,{href:"https://www.scalawilliam.com/essential-sbt/",children:"Essential sbt"}),' tutorial written by William "Scala William" Narmontas.']})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var t=s(6540);const l={},i=t.createContext(l);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);